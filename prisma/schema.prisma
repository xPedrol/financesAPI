datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model User {
  id        String      @id @default(uuid()) @map("_id")
  email     String      @unique
  name      String?
  picture   String?
  password  String?
  Expense   Expense[]
  Tag       Tag[]
  createdAt DateTime?   @default(now())
  Note      Note[]
  Goal      Goal[]
  NoteGroup NoteGroup[]
}

model Tag {
  id          String    @id @default(uuid()) @map("_id")
  name        String
  color       String
  description String    @db.Text
  Expense     Expense[]
  createdAt   DateTime? @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      String

  @@index([userId])
}

model Expense {
  id          String    @id @default(uuid()) @map("_id")
  amount      Float
  date        DateTime?
  tag         Tag       @relation(fields: [tagId], references: [id])
  tagId       String
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  description String?   @db.Text

  @@index([userId, tagId])
}

model Note {
  id          String     @id @default(uuid()) @map("_id")
  title       String
  description String     @db.Text
  createdAt   DateTime?  @default(now())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  date        DateTime?
  fixed       Boolean?
  NoteGroup   NoteGroup? @relation(fields: [noteGroupId], references: [id])
  noteGroupId String?

  @@index([userId])
}

model NoteGroup {
  id        String    @id @default(uuid()) @map("_id")
  title     String
  createdAt DateTime? @default(now())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  Note      Note[]

  @@index([userId])
}

model Goal {
  id        String    @id @default(uuid()) @map("_id")
  amount    Float
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  date      DateTime
  createdAt DateTime? @default(now())

  @@index([userId])
}
